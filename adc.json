{
    "components": {
        "parameters": {
            "Count": {
                "description": "default: 20\n",
                "in": "query",
                "name": "count",
                "schema": {
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "FilterBy": {
                "in": "query",
                "name": "filterBy",
                "schema": {
                    "type": "string"
                }
            },
            "FilterOn": {
                "explode": true,
                "in": "query",
                "name": "filterOn",
                "schema": {
                    "items": {
                        "enum": [
                            "name",
                            "description",
                            "uid"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "style": "form"
            },
            "FilterOnGateway": {
                "explode": true,
                "in": "query",
                "name": "filterOn",
                "schema": {
                    "items": {
                        "enum": [
                            "gateway"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "style": "form"
            },
            "SortBy": {
                "description": "default: updateTime\n",
                "in": "query",
                "name": "sortBy",
                "schema": {
                    "enum": [
                        "name",
                        "uid",
                        "environmentRef.uid",
                        "description",
                        "createTime",
                        "updateTime"
                    ],
                    "type": "string"
                }
            },
            "SortOrder": {
                "description": "default: descending\n",
                "in": "query",
                "name": "sortOrder",
                "schema": {
                    "enum": [
                        "ascending",
                        "descending"
                    ],
                    "type": "string"
                }
            },
            "StartIndex": {
                "in": "query",
                "name": "startIndex",
                "schema": {
                    "minimum": 1,
                    "type": "integer"
                }
            }
        },
        "schemas": {
            "App": {
                "additionalProperties": false,
                "description": "An App is a collection of Components.",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    },
                    "tcpUdpComponentRefs": {
                        "description": "Reference to all TcpUdp Component resources in this Environment. This is a read only field populated in the server response.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "webComponentRefs": {
                        "description": "Reference to all Web Component resources in this Environment. This is a read only field populated in the server response.",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "metadata"
                ],
                "type": "object"
            },
            "AppID": {
                "maxLength": 2048,
                "type": "string"
            },
            "AppList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/App"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "$ref": "#/components/schemas/ItemsPerPage"
                    },
                    "startIndex": {
                        "$ref": "#/components/schemas/StartIndex"
                    },
                    "totalResults": {
                        "$ref": "#/components/schemas/TotalResults"
                    }
                },
                "type": "object"
            },
            "AppListAll": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/App"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "startIndex": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "totalResults": {
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "ChildrenState": {
                "additionalProperties": false,
                "description": "Roll up of child resource states.\n",
                "properties": {
                    "configured": {
                        "description": "The number of child resources that have a complete and valid configuration.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "configuring": {
                        "description": "The number of child resources that are in the process of being configured.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "deleting": {
                        "description": "The number of child resources that are in the process of being deleted.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "error": {
                        "description": "The number of child resources that have encountered an error during the configuration process.",
                        "minimum": 0,
                        "type": "integer"
                    },
                    "total": {
                        "description": "The total number of child resources.",
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "configuring",
                    "configured",
                    "deleting",
                    "error",
                    "total"
                ],
                "type": "object"
            },
            "Condition": {
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "description": "A human-readable message that provides additional information about the configuration operation.",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "type": {
                        "description": "The condition type.",
                        "maxLength": 500,
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "message"
                ],
                "type": "object"
            },
            "EnvironmentID": {
                "maxLength": 2048,
                "type": "string"
            },
            "EnvironmentUseCase": {
                "additionalProperties": false,
                "properties": {
                    "templateGroupRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "required": [
                    "templateGroupRef"
                ],
                "type": "object"
            },
            "ErrorDetail": {
                "additionalProperties": false,
                "properties": {
                    "description": {
                        "description": "A detailed error message returned by the server.\n\nThese messages contain the following information, where applicable:\n\n- What happened.\n- Why it happened.\n- What the consequences are (if any).\n- Recommended action to take to resolve the issue.\n",
                        "example": "Error doing \u003caction\u003e: \u003creason for error\u003e. This can lead to \u003cpotential consequences\u003e. Try \u003caction\u003e to resolve the issue.",
                        "maxLength": 500,
                        "type": "string"
                    }
                },
                "required": [
                    "description"
                ],
                "type": "object"
            },
            "ErrorModel": {
                "additionalProperties": false,
                "properties": {
                    "code": {
                        "description": "A numeric error code that can be used to identify errors for support purposes.\n",
                        "example": 1234567,
                        "type": "integer"
                    },
                    "details": {
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetail"
                        },
                        "type": "array"
                    },
                    "message": {
                        "description": "A human-readable message, in English, that describes the error.\n",
                        "example": "Error doing \u003caction\u003e.",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "message",
                    "code"
                ],
                "type": "object"
            },
            "Gateway": {
                "additionalProperties": false,
                "properties": {
                    "customExtensions": {
                        "type": "object"
                    },
                    "ingress": {
                        "$ref": "#/components/schemas/Ingress"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    }
                },
                "required": [
                    "metadata"
                ],
                "type": "object"
            },
            "GatewayID": {
                "maxLength": 2048,
                "type": "string"
            },
            "GatewayIngressUri": {
                "additionalProperties": false,
                "properties": {
                    "customExtensions": {
                        "description": "Generates dynamic content structure based on what usecases are enabled on the environment level.\n",
                        "example": {
                            "headers": {
                                "ignoreInvalidHeaders": true,
                                "underscoresInHeaders": true
                            }
                        },
                        "type": "object"
                    },
                    "matchMethod": {
                        "$ref": "#/components/schemas/GatewayURIMatchMethod"
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    },
                    "uri": {
                        "description": "Defines the URI in Gateways.\n\nFor URIs in Gateways, `uris` must be a complete URI that follows the format `\u003chttp|https\u003e://host[:port]`;\nadditionally each URI can have a match method specified and an HTTPS URI can include TLS information.\nExamples:\n  - `http://www.f5.com`\n  - `https://www.f5.com`\n  - `http://www.f5.com:8080`\n  - `http://*.info.f5.com`\n",
                        "example": "http://www.f5.com",
                        "type": "string"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            },
            "GatewayIngressUris": {
                "items": {
                    "$ref": "#/components/schemas/GatewayIngressUri"
                },
                "type": "array"
            },
            "GatewayList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Gateway"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "$ref": "#/components/schemas/ItemsPerPage"
                    },
                    "startIndex": {
                        "$ref": "#/components/schemas/StartIndex"
                    },
                    "totalResults": {
                        "$ref": "#/components/schemas/TotalResults"
                    }
                },
                "type": "object"
            },
            "GatewayListAll": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Gateway"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "startIndex": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "totalResults": {
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "GatewayName": {
                "maxLength": 100,
                "type": "string"
            },
            "GatewaySettings": {
                "additionalProperties": false,
                "description": "The current snapshot of the gateway settings that are reflected in the configuration on NGINX instances referenced by this Gateway.\n",
                "properties": {
                    "templateRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "type": "object"
            },
            "GatewayURIMatchMethod": {
                "default": "EXACT",
                "description": "Specifies how to determine a match between an incoming Web URI and configured Web URI.",
                "enum": [
                    "PREFIX",
                    "REGEX",
                    "SUFFIX",
                    "EXACT"
                ],
                "example": "SUFFIX",
                "type": "string"
            },
            "HashLBMethod": {
                "additionalProperties": false,
                "properties": {
                    "consistentHash": {
                        "$ref": "#/components/schemas/ServiceConfigState"
                    },
                    "type": {
                        "enum": [
                            "HASH"
                        ],
                        "type": "string"
                    },
                    "userKey": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "userKey"
                ],
                "type": "object"
            },
            "IPHashLB": {
                "additionalProperties": false,
                "description": "IP Hash Load Balancing only applicable to Web Components.",
                "properties": {
                    "type": {
                        "enum": [
                            "IPHASH"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "Ingress": {
                "additionalProperties": false,
                "properties": {
                    "placement": {
                        "$ref": "#/components/schemas/Placement"
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    },
                    "uris": {
                        "$ref": "#/components/schemas/GatewayIngressUris"
                    }
                },
                "type": "object"
            },
            "InstanceGroupRef": {
                "additionalProperties": false,
                "properties": {
                    "listenIps": {
                        "items": {
                            "example": "[2001::1]",
                            "maxLength": 2048,
                            "pattern": "^(?:(?:(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)(?::(?:[1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?$)|(?:\\[\\s*(?:(?:(?:[0-9a-fA-F]{1,4}:){7}(?:[0-9a-fA-F]{1,4}|:))|(?:(?:[0-9a-fA-F]{1,4}:){6}(?::[0-9a-fA-F]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-fA-F]{1,4}:){5}(?:(?:(?::[0-9a-fA-F]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-fA-F]{1,4}:){4}(?:(?:(?::[0-9a-fA-F]{1,4}){1,3})|(?:(?::[0-9a-fA-F]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){3}(?:(?:(?::[0-9a-fA-F]{1,4}){1,4})|(?:(?::[0-9a-fA-F]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){2}(?:(?:(?::[0-9a-fA-F]{1,4}){1,5})|(?:(?::[0-9a-fA-F]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-fA-F]{1,4}:){1}(?:(?:(?::[0-9a-fA-F]{1,4}){1,6})|(?:(?::[0-9a-fA-F]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-fA-F]{1,4}){1,7})|(?:(?::[0-9a-fA-F]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?](?::(?:[1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))?\\s*$))",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "example": "main web",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "ref": {
                        "example": "570406ec-946a-4f3f-a609-da54db069d74",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "ref"
                ],
                "type": "object"
            },
            "ItemsPerPage": {
                "minimum": 1,
                "type": "integer"
            },
            "Job": {
                "additionalProperties": false,
                "description": "A reference used to track pending request sent to DPM.\n",
                "properties": {
                    "correlationID": {
                        "example": "ADC-7980fd96-1f59-4f21-a1ac-02e1689246f2",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "createTime": {
                        "example": "2019-07-29T09:12:33.001Z",
                        "format": "date-time",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "correlationID",
                    "createTime"
                ],
                "type": "object"
            },
            "LeastConnLB": {
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "enum": [
                            "LEAST_CONNECTIONS"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "Metadata": {
                "additionalProperties": false,
                "properties": {
                    "createTime": {
                        "description": "A timestamp that represents the server time when the resource was created.\n\nCreate time is not guaranteed to be set in \"happens-before\" order\nacross separate operations.\n\nIn JSON format, `create_time` type is encoded as a string in the\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt).\n\nFor example: 2018-04-01T01:30:15.01Z\n\nCreate Time is assigned by the server and cannot be changed.\n",
                        "example": "2019-07-29T09:12:33.001Z",
                        "format": "date-time",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "description": {
                        "description": "`description` is a free-form text property. You can use it to provide information that helps\nto identify the resource.\n\nDescriptions:\n\n- are optional (defaults to an empty string if no value is provided),\n- do not have to be unique,\n- cannot be assigned by the server.\n",
                        "example": "This is a sample description string. It provides information about the resource.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    "environmentRef": {
                        "$ref": "#/components/schemas/Reference"
                    },
                    "name": {
                        "description": "Resource name is a user-friendly identifier for a resource.\n\nnames:\n\n- allow all alpha-numeric characters;\n- allow special characters: \u003cspace\u003e and these characters inside the quotes \"@#$%-_\";\n- allow length of 1 to 64 characters;\n- no leading or trailing spaces\n",
                        "example": "resource-name",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[A-Za-z0-9@_-]+(?:[A-Za-z0-9@# _-]*[A-Za-z0-9@#_-])?$",
                        "type": "string"
                    },
                    "tags": {
                        "description": "You can assign `tags` to a resource as a way to help map, scope,\nand organize resources.\n\nThe system uses tag selectors to specify selection criteria that\nmatch resources that have particular tags.\n",
                        "example": [
                            "production_public",
                            "dev",
                            "new_app",
                            "us-west-1",
                            "emea"
                        ],
                        "items": {
                            "maxLength": 128,
                            "minLength": 1,
                            "pattern": "^[\\S]+$",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "uid": {
                        "description": "Unique Identifier (UID)\n\nUID is a unique identifier in time and space for a resource.\nWhen you create a resource, the server assigns a UID to the resource. User\ncannot set this.\n\nRefer to [IETF RFC 4122](https://tools.ietf.org/html/rfc4122) for more information.\n",
                        "example": "d290f1ee-6c54-4b01-90e6-d701748f0851",
                        "format": "uuid",
                        "maxLength": 2048,
                        "type": "string"
                    },
                    "updateTime": {
                        "description": "A timestamp that represents the server time when the resource was last modified.\n\nResources that have never been updated do not have an `update_time` stamp.\n\nThe default value for resources that have never been updated is the local\nlanguage-specific equivalent of \"null\".\n\nIn JSON format, `update_time` type is encoded as a string as described in\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt).\n",
                        "example": "2019-07-29T10:12:33.001Z",
                        "format": "date-time",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "Placement": {
                "additionalProperties": false,
                "properties": {
                    "instanceGroupRefs": {
                        "items": {
                            "$ref": "#/components/schemas/InstanceGroupRef"
                        },
                        "minimum": 1,
                        "type": "array"
                    }
                },
                "required": [
                    "instanceGroupRefs"
                ],
                "type": "object"
            },
            "Reference": {
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "example": "main web",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "ref": {
                        "example": "570406ec-946a-4f3f-a609-da54db069d74",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "ref"
                ],
                "type": "object"
            },
            "ResourceName": {
                "description": "The name of a resource.",
                "example": "default-json",
                "maxLength": 100,
                "type": "string"
            },
            "RoundRobinLB": {
                "additionalProperties": false,
                "properties": {
                    "type": {
                        "enum": [
                            "ROUND_ROBIN"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "SelfState": {
                "additionalProperties": false,
                "properties": {
                    "status": {
                        "description": "CONFIGURING - The configuration of the resource is in process.\nCONFIGURED  - The configuration operation is complete.\nDELETING    - The resource is being deleted.\nERROR       - An error occurred while configuring the resource\n",
                        "enum": [
                            "CONFIGURING",
                            "CONFIGURED",
                            "DELETING",
                            "ERROR"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "status"
                ],
                "type": "object"
            },
            "ServiceConfigState": {
                "default": "DISABLED",
                "enum": [
                    "ENABLED",
                    "DISABLED"
                ],
                "type": "string"
            },
            "ServiceVersion": {
                "properties": {
                    "name": {
                        "description": "Service name.",
                        "example": "myservice",
                        "maxLength": 100,
                        "type": "string"
                    },
                    "version": {
                        "description": "Semver version of the service.",
                        "example": "v0.0.1-githashabc123",
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                "required": [
                    "version",
                    "name"
                ],
                "type": "object"
            },
            "Site": {
                "additionalProperties": false,
                "description": "A collection of instance and instance groups for workload affinity and RBAC\n",
                "properties": {
                    "instanceGroupRefs": {
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    }
                },
                "required": [
                    "metadata",
                    "instanceGroupRefs"
                ],
                "type": "object"
            },
            "SiteList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/Site"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "startIndex": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "totalResults": {
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "StartIndex": {
                "minimum": 1,
                "type": "integer"
            },
            "State": {
                "additionalProperties": false,
                "description": "A representation of the resource's current configuration state\nthat comprises the status of the resource itself (`self`) and any child\nresources (`children`).\n",
                "properties": {
                    "children": {
                        "$ref": "#/components/schemas/ChildrenState"
                    },
                    "conditions": {
                        "items": {
                            "$ref": "#/components/schemas/Condition"
                        },
                        "type": "array"
                    },
                    "jobs": {
                        "items": {
                            "$ref": "#/components/schemas/Job"
                        },
                        "type": "array"
                    },
                    "self": {
                        "$ref": "#/components/schemas/SelfState"
                    }
                },
                "required": [
                    "self"
                ],
                "type": "object"
            },
            "TLS": {
                "additionalProperties": false,
                "description": "TLS settings applicable to URIs.",
                "properties": {
                    "certRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "required": [
                    "certRef"
                ],
                "type": "object"
            },
            "TcpUdpComponent": {
                "additionalProperties": false,
                "description": "A TcpUdp Component represents the processing -- stream proxying.\n-- of traffic associated with a logical part (for example, microservice) of an application/API. It also defines the subsequent\nload balancing of traffic to workloads implementing that part of the application/API.\n\nTcpUdp components are used to configure NGINX functionality associated with TCP/UDP protocols and inherit tcpudp and common\nsettings from linked Gateways.\n",
                "properties": {
                    "backend": {
                        "$ref": "#/components/schemas/TcpUdpComponentBackend"
                    },
                    "customExtensions": {
                        "type": "object"
                    },
                    "ingress": {
                        "$ref": "#/components/schemas/TcpUdpComponentIngress"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    }
                },
                "required": [
                    "metadata"
                ],
                "type": "object"
            },
            "TcpUdpComponentBackend": {
                "additionalProperties": false,
                "description": "Backend settings in a TcpUdp Component.\n",
                "properties": {
                    "workloadGroups": {
                        "items": {
                            "$ref": "#/components/schemas/TcpUdpComponentWorkloadGroup"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "TcpUdpComponentIngress": {
                "additionalProperties": false,
                "description": "Ingress settings in a TcpUdp Component.",
                "properties": {
                    "gatewayRefs": {
                        "description": "Reference(s) to existing Gateway resource(s).",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    },
                    "uris": {
                        "$ref": "#/components/schemas/TcpUdpComponentIngressURIs"
                    }
                },
                "required": [
                    "uris"
                ],
                "type": "object"
            },
            "TcpUdpComponentIngressURI": {
                "additionalProperties": false,
                "properties": {
                    "customExtensions": {
                        "type": "object"
                    },
                    "tls": {
                        "$ref": "#/components/schemas/TLS"
                    },
                    "uri": {
                        "description": "Defines the URI in TcpUdp Components.\nFor URIs in TcpUdp Components, `uris` must conform to the format `schema://address[:port]`\nExamples:\n  - `tcp://192.0.2.247`\n  - `udp://192.0.2.3`\n",
                        "example": "tcp://192.0.2.247",
                        "type": "string"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            },
            "TcpUdpComponentIngressURIs": {
                "items": {
                    "$ref": "#/components/schemas/TcpUdpComponentIngressURI"
                },
                "type": "array"
            },
            "TcpUdpComponentLeastTimeLBMethod": {
                "additionalProperties": false,
                "properties": {
                    "latencyParameter": {
                        "default": "CONNECT",
                        "enum": [
                            "CONNECT",
                            "CONNECT_INFLIGHT",
                            "FIRST_BYTE",
                            "FIRST_BYTE_INFLIGHT",
                            "LAST_BYTE",
                            "LAST_BYTE_INFLIGHT"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "LEAST_TIME"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "TcpUdpComponentList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/TcpUdpComponent"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "$ref": "#/components/schemas/ItemsPerPage"
                    },
                    "startIndex": {
                        "$ref": "#/components/schemas/StartIndex"
                    },
                    "totalResults": {
                        "$ref": "#/components/schemas/TotalResults"
                    }
                },
                "type": "object"
            },
            "TcpUdpComponentLoadBalancingMethod": {
                "discriminator": {
                    "additionalProperties": false,
                    "mapping": {
                        "HASH": "#/components/schemas/HashLBMethod",
                        "LEAST_CONNECTIONS": "#/components/schemas/LeastConnLB",
                        "LEAST_TIME": "#/components/schemas/TcpUdpComponentLeastTimeLBMethod",
                        "RANDOM": "#/components/schemas/TcpUdpComponentRandomLBMethod",
                        "ROUND_ROBIN": "#/components/schemas/RoundRobinLB"
                    },
                    "propertyName": "type"
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/RoundRobinLB"
                    },
                    {
                        "$ref": "#/components/schemas/LeastConnLB"
                    },
                    {
                        "$ref": "#/components/schemas/HashLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/TcpUdpComponentLeastTimeLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/TcpUdpComponentRandomLBMethod"
                    }
                ]
            },
            "TcpUdpComponentRandomLBMethod": {
                "additionalProperties": false,
                "properties": {
                    "twoServerLBMethod": {
                        "enum": [
                            "LEAST_CONNECTIONS",
                            "LEAST_TIME_CONNECT",
                            "LEAST_TIME_FIRST_BYTE",
                            "LEAST_TIME_LAST_BYTE"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "RANDOM"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "TcpUdpComponentSettings": {
                "additionalProperties": false,
                "description": "The current snapshot of the TCP/UDP component settings that are reflected in the configuration on NGINX instances referenced by this TCP/UDP Component.\n",
                "properties": {
                    "templateRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "type": "object"
            },
            "TcpUdpComponentWorkloadGroup": {
                "additionalProperties": false,
                "description": "Group of servers hosting a part of a TcpUdp application represented by a Component.",
                "properties": {
                    "customExtensions": {
                        "type": "object"
                    },
                    "loadBalancingMethod": {
                        "$ref": "#/components/schemas/TcpUdpComponentLoadBalancingMethod"
                    },
                    "name": {
                        "example": "workgroup-1",
                        "type": "string"
                    },
                    "siteRefs": {
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "uris": {
                        "items": {
                            "$ref": "#/components/schemas/TcpUdpComponentWorkloadUri"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "TcpUdpComponentWorkloadUri": {
                "additionalProperties": false,
                "description": "The URI for a server hosting a part of a TcpUdp application.\n\nIt must conform to the format `schema://address[:port]`\nwhere schema is chosen from tcp or udp, address is IP or hostname,\nschema and address must be provided.\n\nFor example:\n- `tcp://192.0.2.247`\n- `udp://192.0.2.247:8443`\n",
                "properties": {
                    "isBackup": {
                        "default": false,
                        "type": "boolean"
                    },
                    "isDown": {
                        "default": false,
                        "type": "boolean"
                    },
                    "maxConns": {
                        "default": 0,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "maxFails": {
                        "default": 1,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "uri": {
                        "example": "udp://192.0.2.247:8443",
                        "type": "string"
                    },
                    "weight": {
                        "default": 1,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            },
            "TotalResults": {
                "minimum": 0,
                "type": "integer"
            },
            "UseCases": {
                "items": {
                    "$ref": "#/components/schemas/EnvironmentUseCase"
                },
                "type": "array"
            },
            "WebComponent": {
                "additionalProperties": false,
                "description": "A component represents the processing –- reverse proxying, rate limiting, security policy enforcement, header rewrites, etc.\n–- of traffic associated with a logical part (for example, microservice) of an application/API. It also defines the subsequent\nload balancing of traffic to workloads implementing that part of the application/API.\n\nWeb components are used to configure NGINX functionality associated with HTTP/HTTPS protocols and inherit web and common\nsettings from linked Gateways.\n",
                "properties": {
                    "backend": {
                        "$ref": "#/components/schemas/WebComponentBackend"
                    },
                    "customExtensions": {
                        "description": "Generates dynamic content structure based on what usecases are enabled on the environment level.\n",
                        "example": {
                            "appProtect": {
                                "loggingPolicy": "log_illegal",
                                "securityPolicy": "NginxStrictPolicy"
                            }
                        },
                        "type": "object"
                    },
                    "ingress": {
                        "$ref": "#/components/schemas/WebComponentIngress"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/Metadata"
                    },
                    "state": {
                        "$ref": "#/components/schemas/State"
                    }
                },
                "required": [
                    "metadata"
                ],
                "type": "object"
            },
            "WebComponentBackend": {
                "additionalProperties": false,
                "description": "Backend settings in a Web Component.\n",
                "properties": {
                    "workloadGroups": {
                        "items": {
                            "$ref": "#/components/schemas/WebComponentWorkloadGroup"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "WebComponentIngress": {
                "additionalProperties": false,
                "description": "Ingress settings in a Web Component.",
                "properties": {
                    "gatewayRefs": {
                        "description": "Reference(s) to existing Gateway resource(s).",
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "uris": {
                        "$ref": "#/components/schemas/WebComponentIngressURIs"
                    }
                },
                "required": [
                    "uris"
                ],
                "type": "object"
            },
            "WebComponentIngressURI": {
                "additionalProperties": false,
                "properties": {
                    "customExtensions": {
                        "description": "Generates dynamic content structure based on what usecases are enabled on the environment level.\n",
                        "example": {
                            "rewritesAndRedirects": {
                                "return": {
                                    "code": 307,
                                    "textOrURL": "http://f5.com"
                                },
                                "rewriteLog": true
                            }
                        },
                        "type": "object"
                    },
                    "matchMethod": {
                        "$ref": "#/components/schemas/WebComponentURIMatchMethod"
                    },
                    "uri": {
                        "description": "Defines the URI in Web Components.\n\nFor URIs in Web Components, `uris` can be a relative path that follows the format `/path[/...]`;\nadditionally each URI can have a match method specified.\nExamples:\n  - `/images`\n  - `/*.jpg`\n  - `/locations/us/wa*`\n",
                        "example": "/images",
                        "type": "string"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            },
            "WebComponentIngressURIs": {
                "items": {
                    "$ref": "#/components/schemas/WebComponentIngressURI"
                },
                "type": "array"
            },
            "WebComponentLeastTimeLBMethod": {
                "additionalProperties": false,
                "properties": {
                    "latencyParameter": {
                        "default": "HEADER",
                        "enum": [
                            "HEADER",
                            "HEADER_INFLIGHT",
                            "LAST_BYTE",
                            "LAST_BYTE_INFLIGHT"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "LEAST_TIME"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "WebComponentList": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/WebComponent"
                        },
                        "type": "array"
                    },
                    "itemsPerPage": {
                        "$ref": "#/components/schemas/ItemsPerPage"
                    },
                    "startIndex": {
                        "$ref": "#/components/schemas/StartIndex"
                    },
                    "totalResults": {
                        "$ref": "#/components/schemas/TotalResults"
                    }
                },
                "type": "object"
            },
            "WebComponentLoadBalancingMethod": {
                "discriminator": {
                    "additionalProperties": false,
                    "mapping": {
                        "HASH": "#/components/schemas/HashLBMethod",
                        "IPHASH": "#/components/schemas/IPHashLB",
                        "LEAST_CONNECTIONS": "#/components/schemas/LeastConnLB",
                        "LEAST_TIME": "#/components/schemas/WebComponentLeastTimeLBMethod",
                        "RANDOM": "#/components/schemas/WebComponentRandomLBMethod",
                        "ROUND_ROBIN": "#/components/schemas/RoundRobinLB"
                    },
                    "propertyName": "type"
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/RoundRobinLB"
                    },
                    {
                        "$ref": "#/components/schemas/IPHashLB"
                    },
                    {
                        "$ref": "#/components/schemas/LeastConnLB"
                    },
                    {
                        "$ref": "#/components/schemas/HashLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/WebComponentLeastTimeLBMethod"
                    },
                    {
                        "$ref": "#/components/schemas/WebComponentRandomLBMethod"
                    }
                ]
            },
            "WebComponentLocationsSettings": {
                "additionalProperties": false,
                "description": "The current snapshot of the web component locations settings that are reflected in the configuration on NGINX instances referenced by this Web Component Locations.\n",
                "properties": {
                    "templateRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "type": "object"
            },
            "WebComponentRandomLBMethod": {
                "additionalProperties": false,
                "properties": {
                    "twoServerLBMethod": {
                        "enum": [
                            "LEAST_CONNECTIONS",
                            "LEAST_TIME_HEADER",
                            "LEAST_TIME_LAST_BYTE"
                        ],
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "RANDOM"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "type"
                ],
                "type": "object"
            },
            "WebComponentSettings": {
                "additionalProperties": false,
                "description": "The current snapshot of the web component settings that are reflected in the configuration on NGINX instances referenced by this Web Component.\n",
                "properties": {
                    "templateRef": {
                        "$ref": "#/components/schemas/Reference"
                    }
                },
                "type": "object"
            },
            "WebComponentURIMatchMethod": {
                "default": "PREFIX",
                "description": "Specifies how to determine a match between an incoming Web URI and configured Web URI.",
                "enum": [
                    "PREFIX",
                    "REGEX",
                    "REGEX_CASE_SENSITIVE",
                    "SUFFIX",
                    "EXACT"
                ],
                "type": "string"
            },
            "WebComponentWorkloadGroup": {
                "additionalProperties": false,
                "description": "Group of servers hosting a part of a Web application represented by a Component.",
                "properties": {
                    "customExtensions": {
                        "description": "Generates dynamic content structure based on what usecases are enabled on the environment level.\n",
                        "example": {
                            "tlsSettings": {
                                "sslCiphers": "ALL:!aNULL:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP",
                                "sslPreferServerCiphers": "ON",
                                "sslProtocols": "TLSv1.3"
                            }
                        },
                        "type": "object"
                    },
                    "loadBalancingMethod": {
                        "$ref": "#/components/schemas/WebComponentLoadBalancingMethod"
                    },
                    "name": {
                        "example": "workgroup-1",
                        "type": "string"
                    },
                    "siteRefs": {
                        "items": {
                            "$ref": "#/components/schemas/Reference"
                        },
                        "type": "array"
                    },
                    "uris": {
                        "items": {
                            "$ref": "#/components/schemas/WebComponentWorkloadUri"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "WebComponentWorkloadUri": {
                "additionalProperties": false,
                "properties": {
                    "isBackup": {
                        "default": false,
                        "example": true,
                        "type": "boolean"
                    },
                    "isDown": {
                        "default": false,
                        "example": false,
                        "type": "boolean"
                    },
                    "isDrain": {
                        "default": false,
                        "example": true,
                        "type": "boolean"
                    },
                    "maxConns": {
                        "default": 0,
                        "example": 100,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "maxFails": {
                        "default": 1,
                        "example": 5,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "uri": {
                        "example": "http://www.f5.com",
                        "type": "string"
                    },
                    "weight": {
                        "default": 1,
                        "example": 2,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "uri"
                ],
                "type": "object"
            }
        }
    },
    "info": {
        "description": "Connect, secure, and govern APIs with NGINX App Delivery Manager, which comes with RESTful APIs to manage the API infrastructure lifecycle for API Ops and API lifecycle for API teams.\n\nNote: When you try out a request, the curl example does not include authentication because after logging into the App Delivery Manager, you are already authenticated. If you want to run this on your own device, you will need to update authentication for your curl command.\n",
        "termsOfService": "https://docs.nginx.com/nginx-instance-manager/",
        "title": "App Delivery Manager REST API Spec",
        "version": "v1"
    },
    "openapi": "3.0.3",
    "paths": {
        "/apps": {
            "get": {
                "description": "Returns a list of all App resources regardless of environments\n",
                "operationId": "listAllApps",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppListAll"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all Apps regardless of environments."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the App resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "List all Apps regardless of environments",
                "tags": [
                    "Apps"
                ]
            }
        },
        "/environments/{environmentID}/apps": {
            "get": {
                "description": "Returns a list of all App resources.\n",
                "operationId": "listApps",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all App resources."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the App resources."
                    }
                },
                "summary": "List all Apps",
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "description": "The name of the Environment that contains the App.",
                    "in": "path",
                    "name": "environmentID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentID"
                    }
                }
            ],
            "post": {
                "description": "Creates a new App resource.",
                "operationId": "createApp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App"
                            }
                        }
                    },
                    "description": "An App."
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        },
                        "description": "Successfully created the specified App resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to create the App resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request failed due to a naming conflict with an existing resource."
                    }
                },
                "summary": "Create an App",
                "tags": [
                    "Apps"
                ]
            }
        },
        "/environments/{environmentID}/apps/{appID}": {
            "delete": {
                "description": "Deletes the specified App resource.\n\nYou must delete all of an App's child resources before you delete the App.\n",
                "operationId": "deleteApp",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified App resource.\n"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to delete the App resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete the specified App resource failed.\nThe App contains references to active objects and cannot be deleted. Delete the child objects or remove the references, then try again.\n"
                    }
                },
                "summary": "Delete an App",
                "tags": [
                    "Apps"
                ]
            },
            "get": {
                "description": "Gets the information for a specific App resource.\n",
                "operationId": "getApp",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        },
                        "description": "Successfully retrieved information for the requested App resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to read the App resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "Get an App",
                "tags": [
                    "Apps"
                ]
            },
            "parameters": [
                {
                    "description": "The ID of the Environment that contains the App.",
                    "in": "path",
                    "name": "environmentID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentID"
                    }
                },
                {
                    "description": "The name of the App.",
                    "in": "path",
                    "name": "appID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/AppID"
                    }
                }
            ],
            "put": {
                "description": "Creates a new App resource or updates an existing App resource.\n",
                "operationId": "updateApp",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App"
                            }
                        }
                    },
                    "description": "Defines the App resource to create or update."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        },
                        "description": "Successfully updated the specified App resource."
                    },
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/App"
                                }
                            }
                        },
                        "description": "Successfully created the specified App resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to update the App resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "Upsert an App",
                "tags": [
                    "Apps"
                ]
            }
        },
        "/environments/{environmentID}/gateways": {
            "get": {
                "description": "Returns a list of all Gateways in the specified Environment.\n",
                "operationId": "listGateways",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all Gateways."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Gateway resources."
                    }
                },
                "summary": "List all Gateways",
                "tags": [
                    "Gateways"
                ]
            },
            "parameters": [
                {
                    "description": "The ID of the Environment that contains the Gateway resource.",
                    "in": "path",
                    "name": "environmentID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentID"
                    }
                }
            ],
            "post": {
                "description": "Creates a new Gateway resource.\n",
                "operationId": "createGateway",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gateway"
                            }
                        }
                    },
                    "description": "Defines the Gateway resource to create."
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "Successfully created the Gateway resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to create the Gateway resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Gateway resource not found."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request failed due to a naming conflict with an existing Gateway resource."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to create a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Create a Gateway",
                "tags": [
                    "Gateways"
                ]
            }
        },
        "/environments/{environmentID}/gateways/{gatewayID}": {
            "delete": {
                "description": "Deletes the specified Gateway resource.",
                "operationId": "deleteGateway",
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "The resource has been marked for deletion. The resource will be deleted after the config for the resource\nis cleared from all placements. Resource deletion will fail if config cannot be cleared from the placement.\n"
                    },
                    "204": {
                        "description": "Successfully deleted the specified resource. No content is returned.\n"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to delete the Gateway resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete a Gateway resource failed.\nThe Gateway is referenced by an App Component(s) and cannot be deleted.\nDelete the App Component or remove the reference, then try again.\n"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Delete a Gateway",
                "tags": [
                    "Gateways"
                ]
            },
            "get": {
                "description": "Returns information for the specified Gateway resource.\n",
                "operationId": "getGateway",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "Successfully retrieved the requested Gateway resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to read the Gateway resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Gateway resource not found."
                    }
                },
                "summary": "Get a Gateway",
                "tags": [
                    "Gateways"
                ]
            },
            "parameters": [
                {
                    "description": "The ID of the Environment that contains the Gateway resource.",
                    "in": "path",
                    "name": "environmentID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/EnvironmentID"
                    }
                },
                {
                    "description": "The ID of the Gateway.",
                    "in": "path",
                    "name": "gatewayID",
                    "required": true,
                    "schema": {
                        "$ref": "#/components/schemas/GatewayID"
                    }
                }
            ],
            "put": {
                "description": "Updates an existing Gateway resource.\n",
                "operationId": "updateGateway",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Gateway"
                            }
                        }
                    },
                    "description": "Update an existing Gateway resource."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Gateway"
                                }
                            }
                        },
                        "description": "Successfully updated the specified Gateway resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to update the Gateway resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Gateway resource not found. Update failed."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to update or create a Gateway resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Upsert a Gateway",
                "tags": [
                    "Gateways"
                ]
            }
        },
        "/environments/{environmentUid}/apps/{appUid}/tcpudp-components": {
            "get": {
                "description": "Returns a list of all TcpUdp Components in the specified Environment.\n",
                "operationId": "listTcpUdpComponents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponentList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all TcpUdp Components."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Component resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "List all TcpUdp Components",
                "tags": [
                    "TcpUdp Components"
                ]
            },
            "parameters": [
                {
                    "description": "The Uid of the Environment that contains the TcpUdp Component resource.",
                    "in": "path",
                    "name": "environmentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the App that contains the TcpUdp Component resource.",
                    "in": "path",
                    "name": "appUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new TcpUdp Component resource.\n",
                "operationId": "createTcpUdpComponent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TcpUdpComponent"
                            }
                        }
                    },
                    "description": "Defines the TcpUdp Component resource to create."
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponent"
                                }
                            }
                        },
                        "description": "Successfully created the Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to create the TcpUdp Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to create a TcpUdp Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Create a TcpUdp Component",
                "tags": [
                    "TcpUdp Components"
                ]
            }
        },
        "/environments/{environmentUid}/apps/{appUid}/tcpudp-components/{tcpUdpComponentUid}": {
            "delete": {
                "description": "Deletes the specified TcpUdp Component resource.",
                "operationId": "deleteTcpUdpComponent",
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponent"
                                }
                            }
                        },
                        "description": "The resource has been marked for deletion. The resource will be deleted after the config for the resource\nis cleared from all placements. Resource deletion will fail if config cannot be cleared from the placement.\n"
                    },
                    "204": {
                        "description": "Successfully deleted the specified resource. No content is returned.\n"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to delete the TcpUdp Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request failed due to a conflict with an existing resource."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete a TcpUdp Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Delete a TcpUdp Component",
                "tags": [
                    "TcpUdp Components"
                ]
            },
            "get": {
                "description": "Returns information for the specified TcpUdp Component resource.\n",
                "operationId": "getTcpUdpComponent",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponent"
                                }
                            }
                        },
                        "description": "Successfully retrieved the requested TcpUdp Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to read the TcpUdp Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "TcpUdp Component resource not found."
                    }
                },
                "summary": "Get a TcpUdp Component",
                "tags": [
                    "TcpUdp Components"
                ]
            },
            "parameters": [
                {
                    "description": "The Uid of the Environment that contains the TcpUdp Component resource.",
                    "in": "path",
                    "name": "environmentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the App that contains the TcpUdp Component resource.",
                    "in": "path",
                    "name": "appUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the TcpUdp Component.",
                    "in": "path",
                    "name": "tcpUdpComponentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates an existing TcpUdp Component resource.\n",
                "operationId": "updateTcpUdpComponent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TcpUdpComponent"
                            }
                        }
                    },
                    "description": "Update an existing TcpUdp Component resource."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponent"
                                }
                            }
                        },
                        "description": "Successfully updated the specified TcpUdp Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to update the TcpUdp Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "TcpUdp Component resource not found. Update failed."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to update a TcpUdp Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Upsert a TcpUdp Component",
                "tags": [
                    "TcpUdp Components"
                ]
            }
        },
        "/environments/{environmentUid}/apps/{appUid}/web-components": {
            "get": {
                "description": "Returns a list of all Web Components in the specified Environment.\n",
                "operationId": "listWebComponents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponentList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all Web Components."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Component resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "List all Web Components",
                "tags": [
                    "Web Components"
                ]
            },
            "parameters": [
                {
                    "description": "The Uid of the Environment that contains the Web Component resource.",
                    "in": "path",
                    "name": "environmentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the App that contains the Web Component resource.",
                    "in": "path",
                    "name": "appUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new Web Component resource.\n",
                "operationId": "createWebComponent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebComponent"
                            }
                        }
                    },
                    "description": "Defines the Web Component resource to create."
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponent"
                                }
                            }
                        },
                        "description": "Successfully created the Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to create the Web Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to create a Web Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Create a Web Component",
                "tags": [
                    "Web Components"
                ]
            }
        },
        "/environments/{environmentUid}/apps/{appUid}/web-components/{webComponentUid}": {
            "delete": {
                "description": "Deletes the specified Web Component resource.",
                "operationId": "deleteWebComponent",
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponent"
                                }
                            }
                        },
                        "description": "The resource has been marked for deletion. The resource will be deleted after the config for the resource\nis cleared from all placements. Resource deletion will fail if config cannot be cleared from the placement.\n"
                    },
                    "204": {
                        "description": "Successfully deleted the specified resource. No content is returned.\n"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to delete the Web Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request failed due to a conflict with an existing resource."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete a Web Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Delete a Web Component",
                "tags": [
                    "Web Components"
                ]
            },
            "get": {
                "description": "Returns information for the specified Web Component resource.\n",
                "operationId": "getWebComponent",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponent"
                                }
                            }
                        },
                        "description": "Successfully retrieved the requested Web Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad input parameter, or possibly a bad URI. Check the input for typos and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to read the Web Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Web Component resource not found."
                    }
                },
                "summary": "Get a Web Component",
                "tags": [
                    "Web Components"
                ]
            },
            "parameters": [
                {
                    "description": "The Uid of the Environment that contains the Web Component resource.",
                    "in": "path",
                    "name": "environmentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the App that contains the Web Component resource.",
                    "in": "path",
                    "name": "appUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                },
                {
                    "description": "The Uid of the Web Component.",
                    "in": "path",
                    "name": "webComponentUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Updates an existing Web Component resource.\n",
                "operationId": "updateWebComponent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebComponent"
                            }
                        }
                    },
                    "description": "Update an existing Web Component resource."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponent"
                                }
                            }
                        },
                        "description": "Successfully updated the specified Web Component resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to update the Web Component resource."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Web Component resource not found. Update failed."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to update a Web Component resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Upsert a Web Component",
                "tags": [
                    "Web Components"
                ]
            }
        },
        "/gateways": {
            "get": {
                "description": "Returns a list of all Gateways objects\n",
                "operationId": "listAllGateways",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/StartIndex"
                    },
                    {
                        "$ref": "#/components/parameters/Count"
                    },
                    {
                        "$ref": "#/components/parameters/SortOrder"
                    },
                    {
                        "$ref": "#/components/parameters/SortBy"
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayListAll"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all Gateways."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Gateway resources."
                    }
                },
                "summary": "List all Gateways objects",
                "tags": [
                    "Gateways"
                ]
            }
        },
        "/sites": {
            "get": {
                "description": "Returns a list of all Sites.",
                "operationId": "listSites",
                "parameters": [
                    {
                        "in": "query",
                        "name": "startIndex",
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "schema": {
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sortBy",
                        "schema": {
                            "default": "updateTime",
                            "enum": [
                                "name",
                                "uid",
                                "createTime",
                                "updateTime"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sortOrder",
                        "schema": {
                            "default": "ascending",
                            "enum": [
                                "ascending",
                                "descending"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/FilterOn"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SiteList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all of the configured Sites."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Site resources."
                    }
                },
                "summary": "List all Sites",
                "tags": [
                    "Sites"
                ]
            },
            "post": {
                "description": "Creates a new Site resource.",
                "operationId": "createSite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        }
                    },
                    "description": "Defines the Site resource to be added.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "Successfully created the requested Site."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Site resources."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to create a Site resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Create a Site",
                "tags": [
                    "Sites"
                ]
            }
        },
        "/sites/{siteUid}": {
            "delete": {
                "description": "Deletes the specified Site resource.",
                "operationId": "deleteSite",
                "responses": {
                    "204": {
                        "description": "Successfully deleted the specified Site resource."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Site resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request failed due to a conflict with an existing resource."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to delete a Site resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Delete a Site",
                "tags": [
                    "Sites"
                ]
            },
            "get": {
                "description": "Returns information about a specified Site resource.",
                "operationId": "getSite",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "Successfully retrieved the requested Site resource."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Site resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "Get a Site",
                "tags": [
                    "Sites"
                ]
            },
            "parameters": [
                {
                    "description": "The Uid of the Site.",
                    "in": "path",
                    "name": "siteUid",
                    "required": true,
                    "schema": {
                        "maxLength": 2048,
                        "type": "string"
                    }
                }
            ],
            "put": {
                "description": "Update an existing Site resource.",
                "operationId": "updateSite",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site"
                                }
                            }
                        },
                        "description": "Successfully received the request to update the specified Site resource."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check the validity of the JSON body provided in the request and try again."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Site resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Site resource not found."
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The request to update a Site resource failed due to exceeding request processing threshold.\nAllow the server to process existing requests, then try again.\n"
                    }
                },
                "summary": "Update a Site",
                "tags": [
                    "Sites"
                ]
            }
        },
        "/tcpudp-components": {
            "get": {
                "description": "Returns a list of all TcpUdp Components constrained only by filters.\n",
                "operationId": "listGatewayTcpUdpComponents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FilterOnGateway"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TcpUdpComponentList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all TcpUdp Components constrained only by filters."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Component resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "List all TcpUdp Components constrained only by filters",
                "tags": [
                    "TcpUdp Components Filters Only"
                ]
            }
        },
        "/web-components": {
            "get": {
                "description": "Returns a list of all Web Components constrained only by filters.\n",
                "operationId": "listGatewayWebComponents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/FilterOnGateway"
                    },
                    {
                        "$ref": "#/components/parameters/FilterBy"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebComponentList"
                                }
                            }
                        },
                        "description": "Successfully retrieved a list of all Web Components constrained only by filters."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Bad request. Check validity of query parameters."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "Access denied. User does not have access to list the Component resources."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorModel"
                                }
                            }
                        },
                        "description": "The resource defined in the URI could not be found. Check the URI for errors and try again."
                    }
                },
                "summary": "List all Web Components constrained only by filters",
                "tags": [
                    "Web Components Filters Only"
                ]
            }
        }
    },
    "servers": [
        {
            "description": "default server URL",
            "url": "/api/adm/v1"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Apps API",
            "tags": []
        },
        {
            "name": "Environments API",
            "tags": []
        },
        {
            "name": "Gateways API",
            "tags": []
        },
        {
            "name": "Indigo Common Components",
            "tags": []
        },
        {
            "name": "Sites API",
            "tags": []
        },
        {
            "name": "TcpUdp Components API",
            "tags": []
        },
        {
            "name": "Web Components API",
            "tags": []
        }
    ]
}
